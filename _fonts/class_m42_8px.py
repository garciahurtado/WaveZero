# CODE UPDATED BY HAND - DO NOT OVERWRITE
# 
# Code generated by font_to_py.py.
# Font: m42.TTF
# Cmd: .\font_to_py.py .\source\m42.TTF 8 m42.py
version = '0.42'


class font_m42:
    chars = {}
    font: []
    char_idx: []

    def __init__(self):
        self.font = [
            b'\x0a\x00\x7f\x00\xff\x80\xe3\x80\x1f\x80\x00\x00\x1c\x00\x1c\x00',
            b'\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\xe0\xe0',
            b'\xe0\xe0\x00\xe0\xe0\x00\x05\x00\xd0\xd0\xd0\x00\x00\x00\x00\x00',
            b'\x08\x00\x6c\xfe\xfe\x6c\xfe\xfe\x6c\x00\x08\x00\x7e\xfe\xd0\xfe',
            b'\x16\xfe\xfc\x00\x0a\x00\x73\x00\xf7\x00\xde\x00\xff\x80\x3d\x80',
            b'\x7f\x80\x67\x00\x00\x00\x0b\x00\x3e\x00\x7f\x00\x77\x00\xff\x80',
            b'\xff\x80\xff\xc0\x7d\xc0\x00\x00\x03\x00\xc0\xc0\xc0\x00\x00\x00',
            b'\x00\x00\x04\x00\x70\xf0\xc0\xc0\xc0\xf0\x70\x00\x04\x00\xe0\xf0',
            b'\x30\x30\x30\xf0\xe0\x00\x08\x00\x10\xd6\xfe\x7c\xfe\xd6\x10\x00',
            b'\x08\x00\x10\x10\x10\xfe\x10\x10\x10\x00\x03\x00\x00\x00\x00\x00',
            b'\x00\xc0\xc0\x40\x08\x00\x00\x00\x00\xfe\x00\x00\x00\x00\x03\x00',
            b'\x00\x00\x00\x00\x00\xc0\xc0\x00\x05\x00\x10\x10\x30\x70\x60\xc0',
            b'\xc0\x00\x0a\x00\x7f\x00\xff\x80\xe3\x80\xe3\x80\xe3\x80\xff\x80',
            b'\x7f\x00\x00\x00\x05\x00\x30\x70\xf0\xf0\x30\x30\x30\x00\x0a\x00',
            b'\xff\x00\xff\x80\x03\x80\xff\x80\xe0\x00\xff\x80\xff\x80\x00\x00',
            b'\x0a\x00\x7f\x00\xff\x80\xe3\x80\x1f\x80\xe3\x80\xff\x80\x7f\x00',
            b'\x00\x00\x0a\x00\x1f\x00\x1f\x00\x3f\x00\xf7\x00\xff\x80\xff\x80',
            b'\x07\x00\x00\x00\x0a\x00\xff\x80\xff\x80\xe0\x00\xff\x80\x03\x80',
            b'\xff\x80\xff\x00\x00\x00\x0a\x00\x7f\x80\xff\x80\xe0\x00\xff\x80',
            b'\xe3\x80\xff\x80\x7f\x00\x00\x00\x0a\x00\xff\x80\xff\x80\x07\x80',
            b'\x1f\x00\x1c\x00\x38\x00\x30\x00\x00\x00\x0a\x00\x7f\x00\xff\x80',
            b'\xe3\x80\xff\x80\xe3\x80\xff\x80\x7f\x00\x00\x00\x0a\x00\x7f\x00',
            b'\xff\x80\xe3\x80\xff\x80\x03\x80\xff\x80\xff\x00\x00\x00\x03\x00',
            b'\x00\xc0\xc0\x00\xc0\xc0\x00\x00\x03\x00\x00\xc0\xc0\x00\xc0\xc0',
            b'\x40\x00\x05\x00\x10\x30\x70\xe0\x70\x30\x10\x00\x08\x00\x00\xfe',
            b'\xfe\x00\xfe\xfe\x00\x00\x05\x00\xc0\xe0\x70\x30\x70\xe0\xc0\x00',
            b'\x0a\x00\x7f\x00\xff\x80\xe3\x80\x1f\x80\x00\x00\x1c\x00\x1c\x00',
            b'\x00\x00\x09\x00\x3c\x00\x7e\x00\xe7\x00\xdf\x00\xd3\x00\xf3\x00',
            b'\x7c\x00\x3c\x00\x0b\x00\x1e\x00\x1e\x00\x37\x00\x77\x80\x7f\x80',
            b'\xff\xc0\xe1\xc0\x00\x00\x0b\x00\xff\x80\xff\xc0\xe1\xc0\xff\xc0',
            b'\xe1\xc0\xff\xc0\xff\x80\x00\x00\x0b\x00\x7f\x80\xff\xc0\xe1\xc0',
            b'\xe0\x00\xe1\xc0\xff\xc0\x7f\x80\x00\x00\x0b\x00\xff\x80\xff\xc0',
            b'\xe1\xc0\xe1\xc0\xe1\xc0\xff\xc0\xff\x80\x00\x00\x0b\x00\xff\xc0',
            b'\xff\xc0\xe0\x00\xff\x80\xe0\x00\xff\xc0\xff\xc0\x00\x00\x0b\x00',
            b'\xff\xc0\xff\xc0\xe0\x00\xff\x80\xe0\x00\xe0\x00\xe0\x00\x00\x00',
            b'\x0b\x00\x7f\xc0\xff\xc0\xe0\x00\xef\xc0\xe1\xc0\xff\xc0\x7f\x80',
            b'\x00\x00\x0b\x00\xe1\xc0\xe1\xc0\xe1\xc0\xff\xc0\xe1\xc0\xe1\xc0',
            b'\xe1\xc0\x00\x00\x04\x00\xe0\xe0\xe0\xe0\xe0\xe0\xe0\x00\x0b\x00',
            b'\x01\xc0\x01\xc0\x01\xc0\xe1\xc0\xe1\xc0\xff\xc0\x7f\x80\x00\x00',
            b'\x0b\x00\xe1\xc0\xe7\xc0\xff\x00\xfc\x00\xff\x00\xe7\xc0\xe1\xc0',
            b'\x00\x00\x0b\x00\xe0\x00\xe0\x00\xe0\x00\xe0\x00\xe0\x00\xff\xc0',
            b'\xff\xc0\x00\x00\x0c\x00\xf1\xe0\xf1\xe0\xfb\xe0\xff\xe0\xff\x60',
            b'\xee\x60\xee\x60\x00\x00\x0b\x00\xf1\xc0\xf1\xc0\xf9\xc0\xff\xc0',
            b'\xef\xc0\xe7\xc0\xe3\xc0\x00\x00\x0b\x00\x7f\x80\xff\xc0\xe1\xc0',
            b'\xe1\xc0\xe1\xc0\xff\xc0\x7f\x80\x00\x00\x0b\x00\xff\x80\xff\xc0',
            b'\xe1\xc0\xff\xc0\xff\x80\xe0\x00\xe0\x00\x00\x00\x0b\x00\x7f\x80',
            b'\xff\xc0\xe1\xc0\xe7\xc0\xe7\xc0\xff\xe0\x7f\xe0\x00\x00\x0b\x00',
            b'\xff\x80\xff\xc0\xe1\xc0\xff\xc0\xff\x80\xe1\xc0\xe1\xc0\x00\x00',
            b'\x0b\x00\x7f\xc0\xff\xc0\xe0\x00\xff\xc0\x01\xc0\xff\xc0\xff\x80',
            b'\x00\x00\x0b\x00\xff\xc0\xff\xc0\x1c\x00\x1c\x00\x1c\x00\x1c\x00',
            b'\x1c\x00\x00\x00\x0b\x00\xe1\xc0\xe1\xc0\xe1\xc0\xe1\xc0\xe1\xc0',
            b'\xff\xc0\x7f\x80\x00\x00\x0b\x00\xe1\xc0\xe1\xc0\x73\x80\x77\x80',
            b'\x37\x00\x1e\x00\x1e\x00\x00\x00\x0e\x00\xe7\x38\xe7\x38\x7f\xb0',
            b'\x7f\xf0\x3d\xe0\x18\xe0\x18\xe0\x00\x00\x0b\x00\xe1\xc0\xf3\xc0',
            b'\x77\x80\x3f\x00\x77\x80\xf3\xc0\xe1\xc0\x00\x00\x0b\x00\xe1\xc0',
            b'\xf3\xc0\x77\x80\x3f\x00\x1c\x00\x1c\x00\x1c\x00\x00\x00\x0b\x00',
            b'\xff\xc0\xff\xc0\x07\xc0\x3f\x00\xf0\x00\xff\xc0\xff\xc0\x00\x00',
            b'\x04\x00\xf0\xf0\xc0\xc0\xc0\xf0\xf0\x00\x05\x00\xc0\xc0\x60\x70',
            b'\x30\x10\x10\x00\x04\x00\xf0\xf0\x30\x30\x30\xf0\xf0\x00\x06\x00',
            b'\x30\x70\xf8\xd8\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00',
            b'\xf8\xf8\x04\x00\xc0\xe0\x60\x00\x00\x00\x00\x00\x0b\x00\x1e\x00',
            b'\x1e\x00\x37\x00\x77\x80\x7f\x80\xff\xc0\xe1\xc0\x00\x00\x0b\x00',
            b'\xff\x80\xff\xc0\xe1\xc0\xff\xc0\xe1\xc0\xff\xc0\xff\x80\x00\x00',
            b'\x0b\x00\x7f\x80\xff\xc0\xe1\xc0\xe0\x00\xe1\xc0\xff\xc0\x7f\x80',
            b'\x00\x00\x0b\x00\xff\x80\xff\xc0\xe1\xc0\xe1\xc0\xe1\xc0\xff\xc0',
            b'\xff\x80\x00\x00\x0b\x00\xff\xc0\xff\xc0\xe0\x00\xff\x80\xe0\x00',
            b'\xff\xc0\xff\xc0\x00\x00\x0b\x00\xff\xc0\xff\xc0\xe0\x00\xff\x80',
            b'\xe0\x00\xe0\x00\xe0\x00\x00\x00\x0b\x00\x7f\xc0\xff\xc0\xe0\x00',
            b'\xef\xc0\xe1\xc0\xff\xc0\x7f\x80\x00\x00\x0b\x00\xe1\xc0\xe1\xc0',
            b'\xe1\xc0\xff\xc0\xe1\xc0\xe1\xc0\xe1\xc0\x00\x00\x04\x00\xe0\xe0',
            b'\xe0\xe0\xe0\xe0\xe0\x00\x0b\x00\x01\xc0\x01\xc0\x01\xc0\xe1\xc0',
            b'\xe1\xc0\xff\xc0\x7f\x80\x00\x00\x0b\x00\xe1\xc0\xe7\xc0\xff\x00',
            b'\xfc\x00\xff\x00\xe7\xc0\xe1\xc0\x00\x00\x0b\x00\xe0\x00\xe0\x00',
            b'\xe0\x00\xe0\x00\xe0\x00\xff\xc0\xff\xc0\x00\x00\x0c\x00\xf1\xe0',
            b'\xf1\xe0\xfb\xe0\xff\xe0\xff\x60\xee\x60\xee\x60\x00\x00\x0b\x00',
            b'\xf1\xc0\xf1\xc0\xf9\xc0\xff\xc0\xef\xc0\xe7\xc0\xe3\xc0\x00\x00',
            b'\x0b\x00\x7f\x80\xff\xc0\xe1\xc0\xe1\xc0\xe1\xc0\xff\xc0\x7f\x80',
            b'\x00\x00\x0b\x00\xff\x80\xff\xc0\xe1\xc0\xff\xc0\xff\x80\xe0\x00',
            b'\xe0\x00\x00\x00\x0b\x00\x7f\x80\xff\xc0\xe1\xc0\xe7\xc0\xe7\xc0',
            b'\xff\xe0\x7f\xe0\x00\x00\x0b\x00\xff\x80\xff\xc0\xe1\xc0\xff\xc0',
            b'\xff\x80\xe1\xc0\xe1\xc0\x00\x00\x0b\x00\x7f\xc0\xff\xc0\xe0\x00',
            b'\xff\xc0\x01\xc0\xff\xc0\xff\x80\x00\x00\x0b\x00\xff\xc0\xff\xc0',
            b'\x1c\x00\x1c\x00\x1c\x00\x1c\x00\x1c\x00\x00\x00\x0b\x00\xe1\xc0',
            b'\xe1\xc0\xe1\xc0\xe1\xc0\xe1\xc0\xff\xc0\x7f\x80\x00\x00\x0b\x00',
            b'\xe1\xc0\xe1\xc0\x73\x80\x77\x80\x37\x00\x1e\x00\x1e\x00\x00\x00',
            b'\x0e\x00\xe7\x38\xe7\x38\x7f\xb0\x7f\xf0\x3d\xe0\x18\xe0\x18\xe0',
            b'\x00\x00\x0b\x00\xe1\xc0\xf3\xc0\x77\x80\x3f\x00\x77\x80\xf3\xc0',
            b'\xe1\xc0\x00\x00\x0b\x00\xe1\xc0\xf3\xc0\x77\x80\x3f\x00\x1c\x00',
            b'\x1c\x00\x1c\x00\x00\x00\x0b\x00\xff\xc0\xff\xc0\x07\xc0\x3f\x00',
            b'\xf0\x00\xff\xc0\xff\xc0\x00\x00\x04\x00\x30\x70\x60\xe0\x60\x60',
            b'\x70\x30\x03\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x00\x04\x00\xc0\xe0',
            b'\x60\x70\x60\x60\xe0\xc0\x07\x00\x00\x00\x7c\xfc\x00\x00\x00\x00']

        self.char_idx = [
            b'\x00\x00\x12\x00\x1c\x00\x26\x00\x30\x00\x3a\x00\x44\x00\x56\x00',
            b'\x68\x00\x72\x00\x7c\x00\x86\x00\x90\x00\x9a\x00\xa4\x00\xae\x00',
            b'\xb8\x00\xc2\x00\xd4\x00\xde\x00\xf0\x00\x02\x01\x14\x01\x26\x01',
            b'\x38\x01\x4a\x01\x5c\x01\x6e\x01\x78\x01\x82\x01\x8c\x01\x96\x01',
            b'\xa0\x01\xb2\x01\xc4\x01\xd6\x01\xe8\x01\xfa\x01\x0c\x02\x1e\x02',
            b'\x30\x02\x42\x02\x54\x02\x5e\x02\x70\x02\x82\x02\x94\x02\xa6\x02',
            b'\xb8\x02\xca\x02\xdc\x02\xee\x02\x00\x03\x12\x03\x24\x03\x36\x03',
            b'\x48\x03\x5a\x03\x6c\x03\x7e\x03\x90\x03\x9a\x03\xa4\x03\xae\x03',
            b'\xb8\x03\xc2\x03\xcc\x03\xde\x03\xf0\x03\x02\x04\x14\x04\x26\x04',
            b'\x38\x04\x4a\x04\x5c\x04\x66\x04\x78\x04\x8a\x04\x9c\x04\xae\x04',
            b'\xc0\x04\xd2\x04\xe4\x04\xf6\x04\x08\x05\x1a\x05\x2c\x05\x3e\x05',
            b'\x50\x05\x62\x05\x74\x05\x86\x05\x98\x05\xa2\x05\xac\x05\xb6\x05',
            b'\xc0\x05' ]

        self.ifb = lambda la: la[0] | (la[1] << 8)

    def init(self):
        self.font = memoryview(b"".join(self.font))
        self.char_idx = memoryview(b"".join(self.char_idx))
        
    def height(self):
        return 8

    def baseline(self):
        return 7

    def max_width(self):
        return 14

    def hmap(self):
        return True

    def reverse(self):
        return False

    def monospaced(self):
        return False

    def min_ch(self):
        return 32

    def max_ch(self):
        return 126

    def get_char(self, char_str):
        char_num = ord(char_str)

        if char_num in self.chars.keys():
            return self.font[char_num]

        index_offset = 2 * (char_num - 32 + 1) if char_num >= 32 and char_num <= 126 else 0
        doff = self.ifb(self.char_idx[index_offset:])
        width = self.ifb(self.font[doff:])

        next_offs = doff + 2 + ((width - 1) // 8 + 1) * 8
        return self.font[doff + 2:next_offs], 8, width

    def load_chars(self):
        start = self.min_ch()
        end = self.max_ch()

        for i in self.char_idx:
            i = i + start
            index_offset = 2 * (i - 32 + 1) if i >= 32 and i <= 126 else 0
            doff = self.ifb(self.char_idx[index_offset:])
            width = self.ifb(self.font[doff:])
            next_offs = doff + 2 + ((width - 1) // 8 + 1) * 8

            self.chars[i] = [self.font[doff + 2:next_offs], 8, width]

        del self.font
